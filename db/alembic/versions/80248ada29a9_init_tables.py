"""init tables

Revision ID: 80248ada29a9
Revises: 
Create Date: 2025-10-08 23:08:26.773841

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision: str = '80248ada29a9'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=150), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('faculties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('faculty_code', sa.String(length=100), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lesson_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('short_name', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rooms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('semester_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('semester_name', sa.String(length=100), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('first_week_type', sa.String(length=10), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("first_week_type IN ('upper', 'lower', 'both')", name='check_first_week_type'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subjects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('short_name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teachers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=30), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('middle_name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_teachers_first_name'), 'teachers', ['first_name'], unique=True)
    op.create_index(op.f('ix_teachers_last_name'), 'teachers', ['last_name'], unique=True)
    op.create_index(op.f('ix_teachers_middle_name'), 'teachers', ['middle_name'], unique=True)
    op.create_table('time_slots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('slot_number', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slot_number')
    )
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('faculty_id', sa.Integer(), nullable=False),
    sa.Column('admission_year', sa.Integer(), nullable=False),
    sa.Column('student_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculties.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groups_name'), 'groups', ['name'], unique=True)
    op.create_table('teacher_subject',
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=False),
    sa.Column('qualification', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('teacher_id', 'subject_id')
    )
    op.create_table('bot_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('notifications_enabled', sa.Boolean(), nullable=False),
    sa.Column('notifications_time', sa.Time(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bot_users_user_id'), 'bot_users', ['user_id'], unique=True)
    op.create_table('schedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('room_id', sa.Integer(), nullable=True),
    sa.Column('lesson_type_id', sa.Integer(), nullable=True),
    sa.Column('time_slot_id', sa.Integer(), nullable=False),
    sa.Column('day_of_week', sa.Integer(), nullable=False),
    sa.Column('week_type', sa.String(length=10), nullable=False),
    sa.Column('is_online', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("week_type IN ('upper', 'lower', 'both')", name='check_week_type'),
    sa.CheckConstraint('day_of_week >= 1 AND day_of_week <= 6', name='check_day_of_week'),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['lesson_type_id'], ['lesson_types.id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.ForeignKeyConstraint(['time_slot_id'], ['time_slots.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('group_id', 'day_of_week', 'time_slot_id', 'week_type', name='unique_schedule_slot')
    )
    op.create_table('schedule_changes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('original_schedule_id', sa.Integer(), nullable=True),
    sa.Column('change_date', sa.Date(), nullable=False),
    sa.Column('new_subject_id', sa.Integer(), nullable=True),
    sa.Column('new_teacher_id', sa.Integer(), nullable=True),
    sa.Column('new_room_id', sa.Integer(), nullable=True),
    sa.Column('new_time_slot_id', sa.Integer(), nullable=True),
    sa.Column('is_cancelled', sa.Boolean(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['bot_users.id'], ),
    sa.ForeignKeyConstraint(['new_room_id'], ['rooms.id'], ),
    sa.ForeignKeyConstraint(['new_subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['new_teacher_id'], ['teachers.id'], ),
    sa.ForeignKeyConstraint(['new_time_slot_id'], ['time_slots.id'], ),
    sa.ForeignKeyConstraint(['original_schedule_id'], ['schedule.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schedule_changes_change_date'), 'schedule_changes', ['change_date'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_schedule_changes_change_date'), table_name='schedule_changes')
    op.drop_table('schedule_changes')
    op.drop_table('schedule')
    op.drop_index(op.f('ix_bot_users_user_id'), table_name='bot_users')
    op.drop_table('bot_users')
    op.drop_table('teacher_subject')
    op.drop_index(op.f('ix_groups_name'), table_name='groups')
    op.drop_table('groups')
    op.drop_table('time_slots')
    op.drop_index(op.f('ix_teachers_middle_name'), table_name='teachers')
    op.drop_index(op.f('ix_teachers_last_name'), table_name='teachers')
    op.drop_index(op.f('ix_teachers_first_name'), table_name='teachers')
    op.drop_table('teachers')
    op.drop_table('subjects')
    op.drop_table('semester_settings')
    op.drop_table('rooms')
    op.drop_table('lesson_types')
    op.drop_table('faculties')
    op.drop_table('admin_users')
    # ### end Alembic commands ###
